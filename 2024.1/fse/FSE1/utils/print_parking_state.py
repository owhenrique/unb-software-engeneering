def print_parking_state(state):
    symbols = {
        0: 'ğŸŸ¢',  # Available
        1: 'ğŸ”´'   # Occupied
    }

    custom_symbols = {
        0: 'ğŸ”µ',  # Vaga 1 (PCs)
        1: 'ğŸŸ¡',  # Vaga 2 (Deficientes)
        2: 'ğŸŸ¡'   # Vaga 3 (Deficientes)
    }

    floor_names = ["TÃ©rreo", "1Âº Andar", "2Âº Andar"]
    total_cars = 0

    # Iterar em ordem inversa
    for floor_index in range(len(state) - 1, -1, -1):
        floor = state[floor_index]
        floor_name = floor_names[floor_index]
        print(f"{floor_name}:", end=" " * (10 - len(floor_name)))  # Adjust spacing
        for slot_index, slot in enumerate(floor):
            if slot['state'] == 1:
                total_cars += 1
            if slot_index in custom_symbols:
                symbol = custom_symbols[slot_index] if slot['state'] == 0 else symbols[slot['state']]
            else:
                symbol = symbols[slot['state']]
            print(symbol, end=" ")
        print()

    print()
    print(f"ğŸš™ - Total de Carros no Estacionamento: {total_cars}")
    print()
    print("\nLegenda:")
    print("ğŸ”µ - Vagas para PCs (Pessoa com DeficiÃªncia)")
    print("ğŸŸ¡ - Vagas para Deficientes")
    print("ğŸ”´ - Vaga Ocupada")
    print("ğŸŸ¢ - Vaga DisponÃ­vel")
    
